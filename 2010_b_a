 //question 1
 
#include <stdlib.h>
#include <stdio.h>

#define T 5

typedef struct
{
    int i, j, sum;
} triad;

int indexMatrix(int arr[][10], int coll, int row, triad** num);

int main()
{
    int i = 0, j = 0;
    int b = 3;

    int arr[T][T];
    for (i = 0; i < T; i++)
    {
        for (j = 0; j < T; j++)
        {
            arr[i][j] = b + i - 2;
        }
    }

    triad numbers_arr = { 0, 0, 0 };
    int newArr = indexMatrix(arr, T, T, &numbers_arr);
    printf("%d", newArr);

    return 0;
}
/////////////////////////////////////////question 3 
#include <stdlib.h>
#include <stdio.h>;
#include<string.h>
#include <ctype.h>



int main() {
	 
	int n = 5;
	int* arr[] = { 9,9,3,4,2 };
	//Item *adress = (Item*)malloc(sizeof(Item));
	//adress = list_without_duplicate(arr, n);

}
typedef struct Item{
	int num; 
	struct Item* next; 
 }Item; 

Item* list_without_duplicate(int *arr, int n ) {
	Item* lst, * lastpoint, * testpoint;
	//lst- beginning of list 
	int i; 
	lst = (Item*)malloc(sizeof(Item));
	lastpoint = lst;
	lst->next= NULL;
	lst->num = arr[0];

	for (i = 1; i < n; i++) {
		testpoint = lst; 
		while (testpoint) {
			if (testpoint->num == arr[i])
				break; 
			testpoint = testpoint->next;
		}
		if (testpoint == NULL) {
			lastpoint->next = (Item*)malloc(sizeof(Item));
			lastpoint = lastpoint->next;
			lastpoint->num = arr[i];
			lastpoint->next = NULL;
		}

	}
	return lst;

}
int indexMatrix(int arr[][10], int coll, int row, triad** num)
{
    int i, j, count = 0;

    for (i = 0; i < row; i++)
    {
        for (j = 0; j < coll; j++)
        {
            if (i + j == arr[i][j])
            {
                count++;
            }
        }
    }

    if (!count)
    {
        *num = NULL;
        return count;
    }

    *num = calloc(count, sizeof(triad));
    count = 0;

    for (i = 0; i < row; i++)
    {
        for (j = 0; j < coll; j++)
        {
            if (i + j == arr[i][j])
            {
              (*num)[count].i = i;
              (*num)[count].j = j;
              (*num)[count].sum = arr[i][j];
                count++;
            }
        }
    }
    return count;
}
/////////////////////////////////////////////////////////////////qestion2


#include <stdlib.h>
#include <stdio.h>;
#include<string.h>
#include <ctype.h>


void changeStr(char* str);

int main() {
	char str[] = "akjshd++2r2";
	changeStr(&str);
	printf("%s",str);
}


void changeStr(char *str) {
	int i;
	char t;
	char* temp;
	int count = 0; 
	temp=malloc(strlen(str) + 1);

	strcpy_s(temp,strlen(str)*8+8,str);
	if (temp)
		printf("hi");

	for (i = 0; temp[i] != '\0'; i++) {

		if (isalpha(temp[i])) {
			if (islower(temp[i]))
				str[count] = toupper(temp[i]);
			else
				str[count] = tolower(temp[i]);
			count++;
		}
		else if (isdigit(temp[i])) {
			t = 0;
			for (t = '1'; t <= temp[i]; t++) {
				str[count] = t;
				count++;
			}
		}

	}
	//free(temp);
	str[count] = '\0';
}

